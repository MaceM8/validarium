!(function(t, e) {
	typeof exports == 'object' && typeof module != 'undefined'
		? e(
				exports,
				require('react-intl'),
				require('ramda-extension'),
				require('@validarium/core/src/createValidation'),
				require('lnd-cardif-utils')
		  )
		: typeof define == 'function' && define.amd
			? define([
					'exports',
					'react-intl',
					'ramda-extension',
					'@validarium/core/src/createValidation',
					'lnd-cardif-utils',
			  ], e)
			: e((t.ReduxToolsIntl = {}), t.reactIntl, t.R_, t.createValidation, t.lndCardifUtils);
})(this, function(t, e, n, r, u) {
	'use strict';
	r = r && r.hasOwnProperty('default') ? r.default : r;
	const i = e.defineMessages({
		isDivisibleBy: {
			id: 'validarium.isDivisibleBy',
			defaultMessage: 'Must be divisible by {divider}',
		},
		isEmail: { id: 'validarium.isEmail', defaultMessage: 'Invalid e-mail address' },
		isInteger: { id: 'validarium.isInteger', defaultMessage: 'Invalid integer' },
		hasLengthInInterval: {
			id: 'validarium.hasLengthInInterval',
			defaultMessage: 'Invalid number of characters ({min} to {max})',
		},
		hasValueInInterval: {
			id: 'validarium.hasValueInInterval',
			defaultMessage: 'Must be between {min} and {max}',
		},
		isNumber: { id: 'validarium.isNumber', defaultMessage: 'Must be a number' },
		isPhoneNumber: { id: 'validarium.isPhoneNumber', defaultMessage: 'Invalid phone number' },
		isPositiveNumber: {
			id: 'validarium.isPositiveNumber',
			defaultMessage: 'Must be a positive number',
		},
		isRequired: { id: 'validarium.isRequired', defaultMessage: 'This field is required' },
		hasLengthMax: {
			id: 'validarium.hasLengthMax',
			defaultMessage: 'Maximum number of characters exceeded ({max})',
		},
		hasLengthMin: {
			id: 'validarium.hasLengthMin',
			defaultMessage: 'Minimum number of characters not reached ({min})',
		},
		hasValueMin: { id: 'validarium.hasValueMin', defaultMessage: 'Minimum value is {min}' },
		hasValueMax: { id: 'validarium.hasValueMax', defaultMessage: 'Maximum value is {max}' },
		hasOnlyDigits: { id: 'validarium.hasOnlyDigits', defaultMessage: 'Must only contain digits' },
		hasNoSpecialSymbols: {
			id: 'validarium.hasNoSpecialSymbols',
			defaultMessage: 'Special characters are not allowed',
		},
		hasLength: {
			id: 'validarium.hasLength',
			defaultMessage: 'Must contain exactly {length} characters',
		},
		startsWith: { id: 'validarium.startsWith', defaultMessage: 'Value must start with {string}' },
		isValidIban: { id: 'validarium.isValidIban', defaultMessage: 'IBAN is not valid' },
	});
	function a(t) {
		return (a =
			typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
				? function(t) {
						return typeof t;
				  }
				: function(t) {
						return t &&
							typeof Symbol == 'function' &&
							t.constructor === Symbol &&
							t !== Symbol.prototype
							? 'symbol'
							: typeof t;
				  })(t);
	}
	function o(t) {
		return t != null && a(t) === 'object' && !0 === t['@@functional/placeholder'];
	}
	function c(t) {
		return function e(n) {
			return arguments.length === 0 || o(n) ? e : t.apply(this, arguments);
		};
	}
	const s = c(function(t) {
		return t != null && Object.prototype.toString.call(t.length) === '[object Number]'
			? t.length
			: NaN;
	});
	function l(t) {
		return function e(n, r) {
			switch (arguments.length) {
				case 0:
					return e;
				case 1:
					return o(n)
						? e
						: c(function(e) {
								return t(n, e);
						  });
				default:
					return o(n) && o(r)
						? e
						: o(n)
							? c(function(e) {
									return t(e, r);
							  })
							: o(r)
								? c(function(e) {
										return t(n, e);
								  })
								: t(n, r);
			}
		};
	}
	function f(t) {
		return function e(n, r, u) {
			switch (arguments.length) {
				case 0:
					return e;
				case 1:
					return o(n)
						? e
						: l(function(e, r) {
								return t(n, e, r);
						  });
				case 2:
					return o(n) && o(r)
						? e
						: o(n)
							? l(function(e, n) {
									return t(e, r, n);
							  })
							: o(r)
								? l(function(e, r) {
										return t(n, e, r);
								  })
								: c(function(e) {
										return t(n, r, e);
								  });
				default:
					return o(n) && o(r) && o(u)
						? e
						: o(n) && o(r)
							? l(function(e, n) {
									return t(e, n, u);
							  })
							: o(n) && o(u)
								? l(function(e, n) {
										return t(e, r, n);
								  })
								: o(r) && o(u)
									? l(function(e, r) {
											return t(n, e, r);
									  })
									: o(n)
										? c(function(e) {
												return t(e, r, u);
										  })
										: o(r)
											? c(function(e) {
													return t(n, e, u);
											  })
											: o(u)
												? c(function(e) {
														return t(n, r, e);
												  })
												: t(n, r, u);
			}
		};
	}
	const p = f(function(t, e, n) {
		return t(e(n));
	});
	const d = r(function(t) {
		return /^\d*$/.test(t);
	}, i.hasOnlyDigits);
	const h = l(function(t, e) {
		return e >= t;
	});
	function y(t) {
		for (var e, n = []; !(e = t.next()).done; ) n.push(e.value);
		return n;
	}
	function g(t, e, n) {
		for (let r = 0, u = n.length; u > r; ) {
			if (t(e, n[r])) return !0;
			r += 1;
		}
		return !1;
	}
	function m(t, e) {
		return Object.prototype.hasOwnProperty.call(e, t);
	}
	const b =
		typeof Object.is == 'function'
			? Object.is
			: function(t, e) {
					return t === e ? t !== 0 || 1 / t == 1 / e : t != t && e != e;
			  };
	const v = Object.prototype.toString;
	const j = (function() {
		return v.call(arguments) === '[object Arguments]'
			? function(t) {
					return v.call(t) === '[object Arguments]';
			  }
			: function(t) {
					return m('callee', t);
			  };
	})();
	const x = !{ toString: null }.propertyIsEnumerable('toString');
	const M = [
		'constructor',
		'valueOf',
		'isPrototypeOf',
		'toString',
		'propertyIsEnumerable',
		'hasOwnProperty',
		'toLocaleString',
	];
	const O = (function() {
		return arguments.propertyIsEnumerable('length');
	})();
	const S = function(t, e) {
		for (let n = 0; t.length > n; ) {
			if (t[n] === e) return !0;
			n += 1;
		}
		return !1;
	};
	const w = c(
		typeof Object.keys != 'function' || O
			? function(t) {
					if (Object(t) !== t) return [];
					let e;
					let n;
					const r = [];
					const u = O && j(t);
					for (e in t) !m(e, t) || (u && e === 'length') || (r[r.length] = e);
					if (x)
						for (n = M.length - 1; n >= 0; )
							m((e = M[n]), t) && !S(r, e) && (r[r.length] = e), (n -= 1);
					return r;
			  }
			: function(t) {
					return Object(t) !== t ? [] : Object.keys(t);
			  }
	);
	const I = c(function(t) {
		return t === null
			? 'Null'
			: void 0 === t
				? 'Undefined'
				: Object.prototype.toString.call(t).slice(8, -1);
	});
	function N(t, e, n, r) {
		const u = y(t);
		function i(t, e) {
			return A(t, e, n.slice(), r.slice());
		}
		return !g(
			function(t, e) {
				return !g(i, e, t);
			},
			y(e),
			u
		);
	}
	function A(t, e, n, r) {
		if (b(t, e)) return !0;
		let u;
		const i = I(t);
		if (i !== I(e)) return !1;
		if (t == null || e == null) return !1;
		if (
			typeof t['fantasy-land/equals'] == 'function' ||
			typeof e['fantasy-land/equals'] == 'function'
		)
			return (
				typeof t['fantasy-land/equals'] == 'function' &&
				t['fantasy-land/equals'](e) &&
				typeof e['fantasy-land/equals'] == 'function' &&
				e['fantasy-land/equals'](t)
			);
		if (typeof t.equals == 'function' || typeof e.equals == 'function')
			return (
				typeof t.equals == 'function' && t.equals(e) && typeof e.equals == 'function' && e.equals(t)
			);
		switch (i) {
			case 'Arguments':
			case 'Array':
			case 'Object':
				if (
					typeof t.constructor == 'function' &&
					((u = `${t.constructor}`.match(/^function (\w*)/)) == null ? '' : u[1]) === 'Promise'
				)
					return t === e;
				break;
			case 'Boolean':
			case 'Number':
			case 'String':
				if (a(t) !== a(e) || !b(t.valueOf(), e.valueOf())) return !1;
				break;
			case 'Date':
				if (!b(t.valueOf(), e.valueOf())) return !1;
				break;
			case 'Error':
				return t.name === e.name && t.message === e.message;
			case 'RegExp':
				if (
					t.source !== e.source ||
					t.global !== e.global ||
					t.ignoreCase !== e.ignoreCase ||
					t.multiline !== e.multiline ||
					t.sticky !== e.sticky ||
					t.unicode !== e.unicode
				)
					return !1;
		}
		for (var o = n.length - 1; o >= 0; ) {
			if (n[o] === t) return r[o] === e;
			o -= 1;
		}
		switch (i) {
			case 'Map':
				return t.size === e.size && N(t.entries(), e.entries(), n.concat([t]), r.concat([e]));
			case 'Set':
				return t.size === e.size && N(t.values(), e.values(), n.concat([t]), r.concat([e]));
			case 'Arguments':
			case 'Array':
			case 'Object':
			case 'Boolean':
			case 'Number':
			case 'String':
			case 'Date':
			case 'Error':
			case 'RegExp':
			case 'Int8Array':
			case 'Uint8Array':
			case 'Uint8ClampedArray':
			case 'Int16Array':
			case 'Uint16Array':
			case 'Int32Array':
			case 'Uint32Array':
			case 'Float32Array':
			case 'Float64Array':
			case 'ArrayBuffer':
				break;
			default:
				return !1;
		}
		const c = w(t);
		if (c.length !== w(e).length) return !1;
		const s = n.concat([t]);
		const l = r.concat([e]);
		for (o = c.length - 1; o >= 0; ) {
			const f = c[o];
			if (!m(f, e) || !A(e[f], t[f], s, l)) return !1;
			o -= 1;
		}
		return !0;
	}
	const E = l(function(t, e) {
		return A(t, e, [], []);
	});
	function q(t, e) {
		return (
			(function(t, e, n) {
				let r;
				let u;
				if (typeof t.indexOf == 'function')
					switch (a(e)) {
						case 'number':
							if (e === 0) {
								for (r = 1 / e; t.length > n; ) {
									if ((u = t[n]) === 0 && 1 / u === r) return n;
									n += 1;
								}
								return -1;
							}
							if (e != e) {
								for (; t.length > n; ) {
									if (typeof (u = t[n]) == 'number' && u != u) return n;
									n += 1;
								}
								return -1;
							}
							return t.indexOf(e, n);
						case 'string':
						case 'boolean':
						case 'function':
						case 'undefined':
							return t.indexOf(e, n);
						case 'object':
							if (e === null) return t.indexOf(e, n);
					}
				for (; t.length > n; ) {
					if (E(t[n], e)) return n;
					n += 1;
				}
				return -1;
			})(e, t, 0) >= 0
		);
	}
	function T(t, e) {
		for (var n = 0, r = e.length, u = Array(r); r > n; ) (u[n] = t(e[n])), (n += 1);
		return u;
	}
	function V(t) {
		return `"${t
			.replace(/\\/g, '\\\\')
			.replace(/[\b]/g, '\\b')
			.replace(/\f/g, '\\f')
			.replace(/\n/g, '\\n')
			.replace(/\r/g, '\\r')
			.replace(/\t/g, '\\t')
			.replace(/\v/g, '\\v')
			.replace(/\0/g, '\\0')
			.replace(/"/g, '\\"')}"`;
	}
	const L = function(t) {
		return (t < 10 ? '0' : '') + t;
	};
	const P =
		typeof Date.prototype.toISOString == 'function'
			? function(t) {
					return t.toISOString();
			  }
			: function(t) {
					return `${t.getUTCFullYear()}-${L(t.getUTCMonth() + 1)}-${L(t.getUTCDate())}T${L(
						t.getUTCHours()
					)}:${L(t.getUTCMinutes())}:${L(t.getUTCSeconds())}.${(t.getUTCMilliseconds() / 1e3)
						.toFixed(3)
						.slice(2, 5)}Z`;
			  };
	const C =
		Array.isArray ||
		function(t) {
			return t != null && t.length >= 0 && Object.prototype.toString.call(t) === '[object Array]';
		};
	function D(t, e, n) {
		return function() {
			if (arguments.length === 0) return n();
			const r = Array.prototype.slice.call(arguments, 0);
			const u = r.pop();
			if (!C(u)) {
				for (let i = 0; t.length > i; ) {
					if (typeof u[t[i]] == 'function') return u[t[i]].apply(u, r);
					i += 1;
				}
				if (
					(function(t) {
						return t != null && typeof t['@@transducer/step'] == 'function';
					})(u)
				)
					return e.apply(null, r)(u);
			}
			return n.apply(this, arguments);
		};
	}
	function U(t) {
		return Object.prototype.toString.call(t) === '[object String]';
	}
	const k = c(function(t) {
		return (
			!!C(t) ||
			(!!t &&
				(a(t) === 'object' &&
					(!U(t) &&
						(t.nodeType === 1
							? !!t.length
							: t.length === 0 ||
							  (t.length > 0 && (t.hasOwnProperty(0) && t.hasOwnProperty(t.length - 1)))))))
		);
	});
	const R = (function() {
		function t(t) {
			this.f = t;
		}
		return (
			(t.prototype['@@transducer/init'] = function() {
				throw Error('init not implemented on XWrap');
			}),
			(t.prototype['@@transducer/result'] = function(t) {
				return t;
			}),
			(t.prototype['@@transducer/step'] = function(t, e) {
				return this.f(t, e);
			}),
			t
		);
	})();
	function B(t, e) {
		switch (t) {
			case 0:
				return function() {
					return e.apply(this, arguments);
				};
			case 1:
				return function(t) {
					return e.apply(this, arguments);
				};
			case 2:
				return function(t, n) {
					return e.apply(this, arguments);
				};
			case 3:
				return function(t, n, r) {
					return e.apply(this, arguments);
				};
			case 4:
				return function(t, n, r, u) {
					return e.apply(this, arguments);
				};
			case 5:
				return function(t, n, r, u, i) {
					return e.apply(this, arguments);
				};
			case 6:
				return function(t, n, r, u, i, a) {
					return e.apply(this, arguments);
				};
			case 7:
				return function(t, n, r, u, i, a, o) {
					return e.apply(this, arguments);
				};
			case 8:
				return function(t, n, r, u, i, a, o, c) {
					return e.apply(this, arguments);
				};
			case 9:
				return function(t, n, r, u, i, a, o, c, s) {
					return e.apply(this, arguments);
				};
			case 10:
				return function(t, n, r, u, i, a, o, c, s, l) {
					return e.apply(this, arguments);
				};
			default:
				throw Error('First argument to _arity must be a non-negative integer no greater than ten');
		}
	}
	const F = l(function(t, e) {
		return B(t.length, function() {
			return t.apply(e, arguments);
		});
	});
	function W(t, e, n) {
		for (let r = n.next(); !r.done; ) {
			if ((e = t['@@transducer/step'](e, r.value)) && e['@@transducer/reduced']) {
				e = e['@@transducer/value'];
				break;
			}
			r = n.next();
		}
		return t['@@transducer/result'](e);
	}
	function _(t, e, n, r) {
		return t['@@transducer/result'](n[r](F(t['@@transducer/step'], t), e));
	}
	const z = typeof Symbol != 'undefined' ? Symbol.iterator : '@@iterator';
	function $(t, e, n) {
		if (
			(typeof t == 'function' &&
				(t = (function(t) {
					return new R(t);
				})(t)),
			k(n))
		)
			return (function(t, e, n) {
				for (let r = 0, u = n.length; u > r; ) {
					if ((e = t['@@transducer/step'](e, n[r])) && e['@@transducer/reduced']) {
						e = e['@@transducer/value'];
						break;
					}
					r += 1;
				}
				return t['@@transducer/result'](e);
			})(t, e, n);
		if (typeof n['fantasy-land/reduce'] == 'function') return _(t, e, n, 'fantasy-land/reduce');
		if (n[z] != null) return W(t, e, n[z]());
		if (typeof n.next == 'function') return W(t, e, n);
		if (typeof n.reduce == 'function') return _(t, e, n, 'reduce');
		throw new TypeError('reduce: list must be array or iterable');
	}
	const H = function() {
		return this.xf['@@transducer/init']();
	};
	const X = function(t) {
		return this.xf['@@transducer/result'](t);
	};
	const Y = (function() {
		function t(t, e) {
			(this.xf = e), (this.f = t);
		}
		return (
			(t.prototype['@@transducer/init'] = H),
			(t.prototype['@@transducer/result'] = X),
			(t.prototype['@@transducer/step'] = function(t, e) {
				return this.f(e) ? this.xf['@@transducer/step'](t, e) : t;
			}),
			t
		);
	})();
	const Z = l(
		D(
			['filter'],
			l(function(t, e) {
				return new Y(t, e);
			}),
			function(t, e) {
				return Object.prototype.toString.call(e) === '[object Object]'
					? $(
							function(n, r) {
								return t(e[r]) && (n[r] = e[r]), n;
							},
							{},
							w(e)
					  )
					: (function(t, e) {
							for (var n = 0, r = e.length, u = []; r > n; )
								t(e[n]) && (u[u.length] = e[n]), (n += 1);
							return u;
					  })(t, e);
			}
		)
	);
	const G = l(function(t, e) {
		return Z(
			((n = t),
			function() {
				return !n.apply(this, arguments);
			}),
			e
		);
		let n;
	});
	const J = c(function(t) {
		return (function t(e, n) {
			const r = function(r) {
				const u = n.concat([e]);
				return q(r, u) ? '<Circular>' : t(r, u);
			};
			const u = function(t, e) {
				return T(function(e) {
					return `${V(e)}: ${r(t[e])}`;
				}, e.slice().sort());
			};
			switch (Object.prototype.toString.call(e)) {
				case '[object Arguments]':
					return `(function() { return arguments; }(${T(r, e).join(', ')}))`;
				case '[object Array]':
					return `[${T(r, e)
						.concat(
							u(
								e,
								G(function(t) {
									return /^\d+$/.test(t);
								}, w(e))
							)
						)
						.join(', ')}]`;
				case '[object Boolean]':
					return a(e) === 'object' ? `new Boolean(${r(e.valueOf())})` : `${e}`;
				case '[object Date]':
					return `new Date(${isNaN(e.valueOf()) ? r(NaN) : V(P(e))})`;
				case '[object Null]':
					return 'null';
				case '[object Number]':
					return a(e) === 'object'
						? `new Number(${r(e.valueOf())})`
						: 1 / e == -1 / 0
							? '-0'
							: e.toString(10);
				case '[object String]':
					return a(e) === 'object' ? `new String(${r(e.valueOf())})` : V(e);
				case '[object Undefined]':
					return 'undefined';
				default:
					if (typeof e.toString == 'function') {
						const i = `${e}`;
						if (i !== '[object Object]') return i;
					}
					return `{${u(e, w(e)).join(', ')}}`;
			}
		})(t, []);
	});
	const K = l(function(t, e) {
		if (Object.prototype.toString.call(t) !== '[object RegExp]')
			throw new TypeError(
				`‘test’ requires a value of type RegExp as its first argument; received ${J(t)}`
			);
		return (function(t) {
			return RegExp(
				t.source,
				(t.global ? 'g' : '') +
					(t.ignoreCase ? 'i' : '') +
					(t.multiline ? 'm' : '') +
					(t.sticky ? 'y' : '') +
					(t.unicode ? 'u' : '')
			);
		})(t).test(e);
	});
	const Q = K(/^-?[0-9]+$/);
	const tt = r(Q, i.isInteger);
	const et = r(function(t) {
		return parseInt(t, 10) > 0;
	}, i.isPositiveNumber);
	const nt = r(n.isNumeric, i.isNumber);
	const rt = r(function() {
		return !0;
	}, i.isRequired);
	const ut = l(function(t, e) {
		return t >= e;
	});
	const it = r(u.isEmail, i.isEmail);
	const at = r(u.isPhoneNumber, i.isPhoneNumber);
	const ot = r(K(/[^_~`!#$%\^&*+=\-\[\]\\;,.\/{}@´'§|\\":<>\?]/g), i.hasNoSpecialSymbols);
	const ct = (function() {
		function t(t, e) {
			(this.xf = e), (this.n = t), (this.i = 0);
		}
		return (
			(t.prototype['@@transducer/init'] = H),
			(t.prototype['@@transducer/result'] = X),
			(t.prototype['@@transducer/step'] = function(t, e) {
				this.i += 1;
				let n;
				const r = this.n === 0 ? t : this.xf['@@transducer/step'](t, e);
				return this.n < 0 || this.n > this.i
					? r
					: (n = r) && n['@@transducer/reduced']
						? n
						: { '@@transducer/value': n, '@@transducer/reduced': !0 };
			}),
			t
		);
	})();
	const st = l(function(t, e) {
		return new ct(t, e);
	});
	function lt(t, e) {
		return function() {
			const n = arguments.length;
			if (n === 0) return e();
			const r = arguments[n - 1];
			return C(r) || typeof r[t] != 'function'
				? e.apply(this, arguments)
				: r[t].apply(r, Array.prototype.slice.call(arguments, 0, n - 1));
		};
	}
	const ft = f(
		lt('slice', function(t, e, n) {
			return Array.prototype.slice.call(n, t, e);
		})
	);
	const pt = l(
		D(['take'], st, function(t, e) {
			return ft(0, t < 0 ? 1 / 0 : t, e);
		})
	);
	const dt = l(function(t, e) {
		return E(pt(t.length, e), t);
	});
	function ht(t, e) {
		return function() {
			return e.call(this, t.apply(this, arguments));
		};
	}
	const yt = f($);
	const gt = c(lt('tail', ft(1, 1 / 0)));
	function mt() {
		if (arguments.length === 0) throw Error('pipe requires at least one argument');
		return B(arguments[0].length, yt(ht, arguments[0], gt(arguments)));
	}
	const bt = l(function(t, e) {
		return t === 1
			? c(e)
			: B(
					t,
					(function t(e, n, r) {
						return function() {
							for (var u = [], i = 0, a = e, c = 0; n.length > c || arguments.length > i; ) {
								var s;
								c >= n.length || (o(n[c]) && arguments.length > i)
									? ((s = arguments[i]), (i += 1))
									: (s = n[c]),
									(u[c] = s),
									o(s) || (a -= 1),
									(c += 1);
							}
							return a > 0 ? B(a, t(e, u, r)) : r.apply(this, u);
						};
					})(t, [], e)
			  );
	});
	const vt = f(function(t, e, n) {
		return bt(Math.max(t.length, e.length, n.length), function() {
			return t.apply(this, arguments) ? e.apply(this, arguments) : n.apply(this, arguments);
		});
	});
	const jt = f(function(t, e, n) {
		return t(n) ? e(n) : n;
	});
	const xt = (function() {
		function t(t, e) {
			(this.xf = e), (this.f = t);
		}
		return (
			(t.prototype['@@transducer/init'] = H),
			(t.prototype['@@transducer/result'] = X),
			(t.prototype['@@transducer/step'] = function(t, e) {
				return this.xf['@@transducer/step'](t, this.f(e));
			}),
			t
		);
	})();
	const Mt = l(
		D(
			['fantasy-land/map', 'map'],
			l(function(t, e) {
				return new xt(t, e);
			}),
			function(t, e) {
				switch (Object.prototype.toString.call(e)) {
					case '[object Function]':
						return bt(e.length, function() {
							return t.call(this, e.apply(this, arguments));
						});
					case '[object Object]':
						return $(
							function(n, r) {
								return (n[r] = t(e[r])), n;
							},
							{},
							w(e)
						);
					default:
						return T(t, e);
				}
			}
		)
	);
	const Ot = l(function(t, e) {
		return [ft(0, t, e), ft(t, s(e), e)];
	});
	const St = c(function(t) {
		return U(t)
			? t
					.split('')
					.reverse()
					.join('')
			: Array.prototype.slice.call(t, 0).reverse();
	});
	function wt(t) {
		return Object.prototype.toString.call(t) === '[object Function]';
	}
	const It = l(function(t, e) {
		if (C(t)) {
			if (C(e)) return t.concat(e);
			throw new TypeError(`${J(e)} is not an array`);
		}
		if (U(t)) {
			if (U(e)) return t + e;
			throw new TypeError(`${J(e)} is not a string`);
		}
		if (t != null && wt(t['fantasy-land/concat'])) return t['fantasy-land/concat'](e);
		if (t != null && wt(t.concat)) return t.concat(e);
		throw new TypeError(`${J(t)} does not have a method named "concat" or "fantasy-land/concat"`);
	});
	function Nt() {
		if (arguments.length === 0) throw Error('compose requires at least one argument');
		return mt.apply(this, St(arguments));
	}
	function At(t) {
		return t;
	}
	const Et = c(At);
	const qt = (function() {
		function t(t, e) {
			(this.xf = e), (this.n = t);
		}
		return (
			(t.prototype['@@transducer/init'] = H),
			(t.prototype['@@transducer/result'] = X),
			(t.prototype['@@transducer/step'] = function(t, e) {
				return this.n > 0 ? ((this.n -= 1), t) : this.xf['@@transducer/step'](t, e);
			}),
			t
		);
	})();
	const Tt = l(
		D(
			['drop'],
			l(function(t, e) {
				return new qt(t, e);
			}),
			function(t, e) {
				return ft(Math.max(0, t), 1 / 0, e);
			}
		)
	);
	const Vt = l(function(t, e) {
		return e > t ? e : t;
	});
	const Lt = l(function(t, e) {
		for (var n = e, r = 0; t.length > r; ) {
			if (n == null) return;
			(n = n[t[r]]), (r += 1);
		}
		return n;
	});
	const Pt = l(function(t, e) {
		return Lt([t], e);
	});
	const Ct = l(function(t, e) {
		return Mt(Pt(t), e);
	});
	const Dt = l(function(t, e) {
		return bt(yt(Vt, 0, Ct('length', e)), function() {
			const n = arguments;
			const r = this;
			return t.apply(
				r,
				T(function(t) {
					return t.apply(r, n);
				}, e)
			);
		});
	});
	const Ut = l(function(t, e) {
		return t % e;
	});
	const kt = f(function(t, e, n) {
		return n.replace(t, e);
	});
	const Rt = l(function(t, e) {
		return bt(t + 1, function() {
			const n = arguments[t];
			if (n != null && wt(n[e])) return n[e].apply(n, Array.prototype.slice.call(arguments, 0, t));
			throw new TypeError(`${J(n)} does not have a method named "${e}"`);
		});
	});
	const Bt = { '@@functional/placeholder': !0 };
	const Ft = l(function(t, e) {
		return +t - +e;
	})(Bt, 55);
	const Wt = p(Ft, Rt(0, 'charCodeAt'));
	const _t = kt(/ /g, '');
	const zt = p(Ut(Bt, 97), parseInt);
	const $t = ft(0, 9);
	const Ht = Dt(Tt, [p(s, $t), Et]);
	const Xt = Dt(It, [Nt(J, zt, $t), Ht]);
	const Yt = Nt(n.listToString, St, Ot(4));
	const Zt = p(n.listToString, Mt(jt(n.isNotNumeric, Wt)));
	var Gt = vt(
		n.ltThanLength(2),
		p(function(t) {
			return Gt(t);
		}, Xt),
		zt
	);
	const Jt = mt(_t, Yt, Zt, Gt, E(1));
	const Kt = r(Jt, i.isValidIban);
	(t.hasLengthInInterval = function(t, e) {
		return r(p(n.between(t, e), s), i.hasLengthInInterval, { max: e, min: t });
	}),
		(t.hasOnlyDigits = d),
		(t.hasValueMin = function(t) {
			return r(h(t), i.hasValueMin, { min: t });
		}),
		(t.isInteger = tt),
		(t.isPositiveNumber = et),
		(t.hasLengthMax = function(t) {
			return r(
				function(e) {
					return t >= e.length;
				},
				i.hasLengthMax,
				{ max: t }
			);
		}),
		(t.hasValueInInterval = function(t, e) {
			return r(n.between(t, e), i.hasValueInInterval, { max: e });
		}),
		(t.isDivisibleBy = function(t) {
			return r(
				function(e) {
					return e % t == 0;
				},
				i.isDivisibleBy,
				{ divisor: t }
			);
		}),
		(t.isNumber = nt),
		(t.isRequired = rt),
		(t.hasLengthMin = function(t) {
			return r(
				function(e) {
					return e.length >= t;
				},
				i.minLength,
				{ min: t }
			);
		}),
		(t.hasValueMax = function(t) {
			return r(ut(t), i.hasValueMax, { max: t });
		}),
		(t.isEmail = it),
		(t.isPhoneNumber = at),
		(t.hasNoSpecialSymbols = ot),
		(t.hasLength = function(t) {
			return r(
				function(e) {
					return e.length === t;
				},
				i.hasLength,
				{ length: t }
			);
		}),
		(t.startsWith = function(t) {
			return r(dt(t), i.startsWith, { string: t });
		}),
		(t.isValidIban = Kt),
		(t.messages = i),
		Object.defineProperty(t, '__esModule', { value: !0 });
});
